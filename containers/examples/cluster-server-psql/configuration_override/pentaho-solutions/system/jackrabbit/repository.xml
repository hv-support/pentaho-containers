<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!DOCTYPE Repository
    PUBLIC "-//The Apache Software Foundation//DTD Jackrabbit 2.0//EN"
    "http://jackrabbit.apache.org/dtd/repository-2.0.dtd">

<Repository>

	<FileSystem class="org.apache.jackrabbit.core.fs.db.DbFileSystem">
		<param name="driver" value="javax.naming.InitialContext"/>
		<param name="url" value="java:comp/env/jdbc/jackrabbit"/>
		<param name="schema" value="postgresql"/>
		<param name="schemaObjectPrefix" value="fs_repos_"/>
	</FileSystem>

	<DataStore class="org.apache.jackrabbit.core.data.db.DbDataStore">
		<param name="driver" value="javax.naming.InitialContext"/>
		<param name="url" value="java:comp/env/jdbc/jackrabbit"/>
		<param name="databaseType" value="postgresql"/>
		<param name="minRecordLength" value="1024"/>
		<param name="maxConnections" value="3"/>
		<param name="copyWhenReading" value="true"/>
		<param name="tablePrefix" value=""/>
		<param name="schemaObjectPrefix" value="ds_repos_"/>
	</DataStore>


	<!-- <DataStore class="org.apache.jackrabbit.core.data.FileDataStore"/> -->

	<!--
      security configuration
  -->
	<Security appName="Jackrabbit">
		<!--
        security manager:
        class: FQN of class implementing the JackrabbitSecurityManager interface
    -->
		<SecurityManager class="org.apache.jackrabbit.core.DefaultSecurityManager" workspaceName="security">
			<!--
      workspace access:
      class: FQN of class implementing the WorkspaceAccessManager interface
      -->
			<!-- <WorkspaceAccessManager class="..."/> -->
			<!-- <param name="config" value="${rep.home}/security.xml"/> -->
		</SecurityManager>

		<!--
        access manager:
        class: FQN of class implementing the AccessManager interface
    -->
		<AccessManager class="org.apache.jackrabbit.core.security.DefaultAccessManager">
			<!-- <param name="config" value="${rep.home}/access.xml"/> -->
		</AccessManager>

		<LoginModule class="org.pentaho.platform.repository2.unified.jcr.jackrabbit.security.SpringSecurityLoginModule">
			<!--
        anonymous user name ('anonymous' is the default value)
      -->
			<param name="anonymousId" value="anonymous"/>
			<!--
        administrator user id (default value if param is missing is 'admin')
      -->
			<param name="adminId" value="pentahoRepoAdmin"/>

			<param name="principalProvider"
             value="org.pentaho.platform.repository2.unified.jcr.jackrabbit.security.SpringSecurityPrincipalProvider"/>
			<!-- comma separated list of pre-authentication tokens, one per application -->
			<param name="preAuthenticationTokens" value="ZchBOvP8q9FQ"/>
			<!-- must match PentahoSessionCredentialsStrategy.ATTR_PRE_AUTHENTICATION_TOKEN -->
			<param name="trust_credentials_attribute" value="pre_authentication_token"/>
		</LoginModule>
	</Security>

	<!--
      location of workspaces root directory and name of default workspace
  -->
	<Workspaces rootPath="${rep.home}/workspaces" defaultWorkspace="default"/>
	<!--
      workspace configuration template:
      used to create the initial workspace if there's no workspace yet
  -->
	<Workspace name="${wsp.name}">

		<FileSystem class="org.apache.jackrabbit.core.fs.db.DbFileSystem">
			<param name="driver" value="javax.naming.InitialContext"/>
			<param name="url" value="java:comp/env/jdbc/jackrabbit"/>
			<param name="schema" value="postgresql"/>
			<param name="schemaObjectPrefix" value="fs_ws_"/>
		</FileSystem>


		<PersistenceManager class="org.apache.jackrabbit.core.persistence.bundle.PostgreSQLPersistenceManager">
			<param name="driver" value="javax.naming.InitialContext"/>
			<param name="url" value="java:comp/env/jdbc/jackrabbit"/>
			<param name="schema" value="postgresql"/>
			<param name="schemaObjectPrefix" value="${wsp.name}_pm_ws_"/>
		</PersistenceManager>


		<SearchIndex class="org.apache.jackrabbit.core.query.lucene.SearchIndex">
			<param name="path" value="${wsp.home}/index"/>
			<param name="supportHighlighting" value="true"/>
		</SearchIndex>


		<WorkspaceSecurity>
			<AccessControlProvider class="org.apache.jackrabbit.core.security.authorization.acl.PentahoACLProvider"/>
		</WorkspaceSecurity>

	</Workspace>

	<!--
      Configures the versioning
  -->
	<Versioning rootPath="${rep.home}/version">
		<!--
        Configures the filesystem to use for versioning for the respective
        persistence manager
    -->

		<FileSystem class="org.apache.jackrabbit.core.fs.db.DbFileSystem">
			<param name="driver" value="javax.naming.InitialContext"/>
			<param name="url" value="java:comp/env/jdbc/jackrabbit"/>
			<param name="schema" value="postgresql"/>
			<param name="schemaObjectPrefix" value="fs_ver_"/>
		</FileSystem>

		<PersistenceManager class="org.apache.jackrabbit.core.persistence.bundle.PostgreSQLPersistenceManager">
			<param name="driver" value="javax.naming.InitialContext"/>
			<param name="url" value="java:comp/env/jdbc/jackrabbit"/>
			<param name="schema" value="postgresql"/>
			<param name="schemaObjectPrefix" value="pm_ver_"/>
		</PersistenceManager>

	</Versioning>

	<!--
      Search index for content that is shared repository wide
      (/jcr:system tree, contains mainly versions)
  -->


	<!--
      Run with a cluster journal
  -->
	<Cluster id="${NODE_NAME}">
		<Journal class="org.apache.jackrabbit.core.journal.DatabaseJournal">
			<param name="revision" value="${rep.home}/revision.log" />
			<param name="driver" value="javax.naming.InitialContext"/>
			<param name="url" value="java:comp/env/jdbc/jackrabbit"/>
			<param name="schema" value="postgresql"/>
			<param name="schemaObjectPrefix" value="cl_j_"/>
		</Journal>
	</Cluster>
</Repository>
